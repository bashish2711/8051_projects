C51 COMPILER V9.53.0.0   GARAGE_DOOR                                                       03/04/2018 16:24:24 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE GARAGE_DOOR
OBJECT MODULE PLACED IN garage_door.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE garage_door.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          #define lcd P2
   3          
   4          //functions' declaration
   5          void controller_init();
   6          void lcd_init();
   7          void character(unsigned char);
   8          void cmd(unsigned char);
   9          void string(unsigned char *);
  10          void number(int);
  11          void delay(int);
  12          
  13          void check_and_open();
  14          void check_and_close();
  15            
  16          // Motor Driver IC Input pins
  17          sbit in1=P1^0;
  18          sbit in2=P1^1;   
  19          
  20          // lcd control pins
  21          sbit rs=P1^6;
  22          sbit en=P1^7;
  23          
  24          unsigned char m=3;
  25          unsigned int password[];  
  26          int d, password_digit1, password_digit2, password_digit3, password_digit4, flag=0;
  27          
  28          void main()
  29          {
  30   1        controller_init();
  31   1        lcd_init();
  32   1        string("PASSWD PROTECTED");
  33   1        cmd(0xc0);
  34   1        string("   GARAGE DOOR");
  35   1        delay(1000);
  36   1        in1=in2=0;
  37   1        P3 = 0xff;
  38   1        delay(1000);
  39   1        
  40   1        while(1)  // Execute the following commands infinitely(continueously)
  41   1        {
  42   2          if((P3 & 0x0f) == 10)   // if * is pressed to open the door
  43   2          {
  44   3            //while((P3 & 0x0f) == 10);      // waiting for next digit to press     
  45   3            check_and_open();              // call this function to check the code and open the door
  46   3          }
  47   2      
  48   2          if((P3 & 0x0f) == 11)   // if # is pressed to close the door
  49   2          {
  50   3            //while((P3 & 0x0f) == 11);     // waiting for next digit to press
  51   3            check_and_close();           // call this function to check the code and open the door
  52   3          }   
  53   2        } 
  54   1      }
  55          
C51 COMPILER V9.53.0.0   GARAGE_DOOR                                                       03/04/2018 16:24:24 PAGE 2   

  56          void check_and_open()
  57          {
  58   1        while((P3 & 0x0f) == 10);
  59   1        
  60   1        password_digit1=(P3 & 0x0f);      // store first digit of password
  61   1        while((P3 & 0x0f) == 1);      // wait till the next digit is pressed
  62   1        
  63   1        password_digit2=(P3 & 0x0f);      // store second digit of password
  64   1        while((P3 & 0x0f) == 2);
  65   1        
  66   1        password_digit3=(P3 & 0x0f);      // store third digit of password
  67   1        while((P3 & 0x0f) == 3);
  68   1        
  69   1        password_digit4=(P3 & 0x0f);      // store second digit of password
  70   1        while((P3 & 0x0f) == 4);
  71   1        
  72   1        if(password_digit1 == 1 && password_digit2 == 2 && password_digit3 == 3 && password_digit4 == 4 && flag =
             -= 0)  
  73   1        {
  74   2          cmd(0x01);
  75   2          cmd(0x80);
  76   2          string("    OPENING");
  77   2          cmd(0xc0);
  78   2          string("THE GARAGE DOOR");
  79   2          in1=1; in2=0;  // starting motor anti-clockwise
  80   2          delay(5000);  //open the door shutter for 5 sec and then close
  81   2          in1=in2=0;      // stop the motor
  82   2          cmd(0x01);
  83   2          string("  DOOR OPENED!");
  84   2          flag = 1;     // remember that the door is open, do not reopen it
  85   2        } 
  86   1        else if(password_digit1 == 1 && password_digit2 == 2 && password_digit3 == 3 && password_digit4 == 4 && f
             -lag == 1)
  87   1        {
  88   2          cmd(0x01);
  89   2          cmd(0x80);
  90   2          string("DOOR IS ");
  91   2          cmd(0xc0);
  92   2          string("ALREADY OPENED!");
  93   2          delay(2000);
  94   2        }
  95   1        
  96   1      }
  97          
  98          void check_and_close()
  99          {
 100   1        while((P3 & 0x0f) == 11);
 101   1        
 102   1        password_digit1=(P3 & 0x0f);      // store first digit of password
 103   1        while((P3 & 0x0f) == 1);      // wait till the next digit is pressed
 104   1        
 105   1        password_digit2=(P3 & 0x0f);      // store second digit of password
 106   1        while((P3 & 0x0f) == 2);
 107   1        
 108   1        password_digit3=(P3 & 0x0f);      // store third digit of password
 109   1        while((P3 & 0x0f) == 3);
 110   1        
 111   1        password_digit4=(P3 & 0x0f);      // store second digit of password
 112   1        while((P3 & 0x0f) == 4);
 113   1        
 114   1        if(password_digit1 == 1 && password_digit2 == 2 && password_digit3 == 3 && password_digit4 == 4 && flag =
             -= 1)
C51 COMPILER V9.53.0.0   GARAGE_DOOR                                                       03/04/2018 16:24:24 PAGE 3   

 115   1        { 
 116   2          cmd(0x01);
 117   2          cmd(0x80);
 118   2          string("    CLOSING");
 119   2          cmd(0xc0);
 120   2          string("THE GARAGE DOOR");
 121   2          in1=0; in2=1;     // starting motor clockwise
 122   2          delay(5000);      // close the door shutter in 5 sec and then stop the motor
 123   2          in1=in2=0;        // stop the motor
 124   2          cmd(0x01);
 125   2          string("  DOOR CLOSED!");
 126   2          flag = 0; 
 127   2        }
 128   1        else if(password_digit1 == 1 && password_digit2 == 2 && password_digit3 == 3 && password_digit4 == 4 && f
             -lag == 0)
 129   1        {
 130   2          cmd(0x01);
 131   2          cmd(0x80);
 132   2          string("DOOR IS");
 133   2          cmd(0xc0);
 134   2          string("ALREADY CLOSED!");
 135   2          delay(2000);
 136   2        }
 137   1      }
 138          
 139          //---------------microcontroller initialzation-----------//
 140          void controller_init()
 141          {
 142   1        // Make controller port pins as output pins
 143   1        lcd=0x00;
 144   1        rs=0;
 145   1        en=0;
 146   1      }
 147          
 148          //--------------------------LCD Code-------------------//
 149          void lcd_init()
 150          {
 151   1        cmd(0x01);     //clear the screen 
 152   1        cmd(0x38);     //8-bit mode with 5*7 matrix
 153   1        cmd(0x0c);     //display on with cursor =>(0ch=curson off; 0fh=cursor blinking; 0eh=curson on)  
 154   1        cmd(0x06);     //shift cursor =>(06h right--> ; 04h <---left; default=right--->)
 155   1        cmd(0x80);     //position =>(80=1st row 1st position; c0=2nd row 1st position)
 156   1      }
 157          
 158          void cmd(unsigned char ch)
 159          {
 160   1        lcd=ch;
 161   1        rs=0;
 162   1        en=1;
 163   1        delay(2);
 164   1        en=0;
 165   1      }
 166          
 167          void character(unsigned char ch)
 168          {
 169   1        lcd=ch;
 170   1        rs=1;
 171   1        en=1;
 172   1        delay(2);
 173   1        en=0;
 174   1      }
 175          
C51 COMPILER V9.53.0.0   GARAGE_DOOR                                                       03/04/2018 16:24:24 PAGE 4   

 176          void string(unsigned char *p)
 177          {
 178   1        while(*p)
 179   1        character(*p++);
 180   1      }
 181          
 182          void number(int n)
 183          { 
 184   1        unsigned char i=1,arr[5];
 185   1      
 186   1        if(n<0)
 187   1        {
 188   2          character('-');     //signed representation for negative number
 189   2          n=-n;               //taking magnitude 
 190   2        }
 191   1        if(n==0)
 192   1          character('0');
 193   1        while(n>0)
 194   1        {
 195   2          arr[i]=(n%10)+48;
 196   2          n=n/10;
 197   2          i++;
 198   2        }
 199   1        
 200   1        for(--i;i>0;i--)     //problem with >=; remedy=> initialize i=1 and stop at i>0
 201   1        {
 202   2        character(arr[i]);
 203   2        }
 204   1      }
 205          //-----------------------End of LCD Code------------------------//  
 206          
 207          void delay(int d)
 208          {
 209   1        unsigned char i;
 210   1        for(;d>0;d--)
 211   1        {
 212   2          for(i=250;i>0;i--);   //500usec
 213   2          for(i=250;i>0;i--);   //500usec
 214   2        }
 215   1      }
 216          
 217          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    833    ----
   CONSTANT SIZE    =    151    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
